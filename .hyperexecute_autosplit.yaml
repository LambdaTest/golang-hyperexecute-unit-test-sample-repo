version: 0.1
globalTimeout: 150
testSuiteTimeout: 150
testSuiteStep: 150

runson: win

autosplit: true
retryOnFailure: false
concurrency: 5
pre:
- curl -O https://dl.google.com/go/go1.20.3.windows-amd64.msi

cacheKey: '{{ checksum "go.exe" }}'
cacheDirectories:
- C:\Program Files\Go\bin

mergeArtifacts: true
uploadArtefacts:
- name: Reports
  path:
  - coverage/**

testDiscovery:
  type: raw
  mode: dynamic
  command: |
    printf 'golang-hyperexecute-unit-test-sample-repo/Tests/armstrong/\ngolang-hyperexecute-unit-test-sample-repo/Tests/array/\ngolang-hyperexecute-unit-test-sample-repo/Tests/case1/\ngolang-hyperexecute-unit-test-sample-repo/Tests/greet/\ngolang-hyperexecute-unit-test-sample-repo/Tests/Hello/\ngolang-hyperexecute-unit-test-sample-repo/Tests/integer/\ngolang-hyperexecute-unit-test-sample-repo/Tests/multiples/\ngolang-hyperexecute-unit-test-sample-repo/Tests/oops/\ngolang-hyperexecute-unit-test-sample-repo/Tests/palindrome/\ngolang-hyperexecute-unit-test-sample-repo/Tests/repeat/\n'

testRunnerCommand: go test $test -coverpkg=$test -covermode=atomic -coverprofile=coverage.out 
